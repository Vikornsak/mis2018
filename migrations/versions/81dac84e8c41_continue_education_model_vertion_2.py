"""Continue Education Model Vertion 2

Revision ID: 81dac84e8c41
Revises: 43cb6ec5674c
Create Date: 2025-07-03 15:35:44.061596

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '81dac84e8c41'
down_revision = '43cb6ec5674c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('age_ranges',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('certificate_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('entity_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(), nullable=False),
    sa.Column('name_en', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('genders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('member_certificate_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=50), nullable=False),
    sa.Column('css_badge', sa.String(length=100), nullable=True, comment='CSS class for badge styling'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('member_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('register_payment_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=50), nullable=False),
    sa.Column('css_badge', sa.String(length=100), nullable=True, comment='CSS class for badge styling'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('registration_statuses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name_th', sa.String(length=50), nullable=False),
    sa.Column('name_en', sa.String(length=50), nullable=False),
    sa.Column('css_badge', sa.String(length=100), nullable=True, comment='CSS class for badge styling'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_en'),
    sa.UniqueConstraint('name_th')
    )
    op.create_table('event_entities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('title_en', sa.String(length=255), nullable=False),
    sa.Column('title_th', sa.String(length=255), nullable=True),
    sa.Column('description_en', sa.Text(), nullable=True),
    sa.Column('description_th', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('certificate_type_id', sa.Integer(), nullable=True),
    sa.Column('creating_institution', sa.String(length=255), nullable=False, comment='สถาบันที่สร้างกิจกรรมนี้'),
    sa.Column('department_or_unit', sa.String(length=255), nullable=True, comment='ภาควิชา หรือหน่วยงานที่รับผิดชอบกิจกรรม'),
    sa.Column('continue_education_score', sa.Numeric(precision=10, scale=2), nullable=False, comment='คะแนนการศึกษาต่อเนื่อง (ทศนิยม 2 ตำแหน่ง)'),
    sa.ForeignKeyConstraint(['category_id'], ['entity_categories.id'], ),
    sa.ForeignKeyConstraint(['certificate_type_id'], ['certificate_types.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_agendas',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('title_th', sa.String(length=255), nullable=False),
    sa.Column('title_en', sa.String(length=255), nullable=False),
    sa.Column('description_th', sa.Text(), nullable=True),
    sa.Column('description_en', sa.Text(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False, comment='Order of the agenda item'),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_certificate_managers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_entity_id', 'staff_id', name='_event_certificate_manager_uc')
    )
    op.create_table('event_editors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_entity_id', 'staff_id', name='_event_editor_uc')
    )
    op.create_table('event_materials',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False, comment='Order of the materials item'),
    sa.Column('title_th', sa.String(length=255), nullable=False),
    sa.Column('title_en', sa.String(length=255), nullable=False),
    sa.Column('description_th', sa.Text(), nullable=True),
    sa.Column('description_en', sa.Text(), nullable=True),
    sa.Column('material_url', sa.String(length=500), nullable=False, comment='URL to the downloadable material'),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_payment_approvers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_entity_id', 'staff_id', name='_event_payment_approver_uc')
    )
    op.create_table('event_receipt_issuers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_entity_id', 'staff_id', name='_event_receipt_issuer_uc')
    )
    op.create_table('event_registration_fees',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('member_type_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['member_type_id'], ['member_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_entity_id', 'member_type_id', name='_event_member_type_uc')
    )
    op.create_table('event_registration_reviewers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_id'], ['staff_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_entity_id', 'staff_id', name='_event_registration_reviewer_uc')
    )
    op.create_table('event_speakers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('title_en', sa.String(length=255), nullable=False),
    sa.Column('title_th', sa.String(length=255), nullable=False),
    sa.Column('name_th', sa.String(length=255), nullable=False),
    sa.Column('name_en', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('phone', sa.String(length=200), nullable=False),
    sa.Column('position_th', sa.String(length=255), nullable=True),
    sa.Column('position_en', sa.String(length=255), nullable=True),
    sa.Column('institution_th', sa.String(length=255), nullable=False),
    sa.Column('institution_en', sa.String(length=255), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=True, comment="URL to the speaker's photo"),
    sa.Column('bio_th', sa.Text(), nullable=True),
    sa.Column('bio_en', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('member_registrations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('registration_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('attendance_count', sa.Integer(), nullable=False, comment='Number of sessions/times attended'),
    sa.Column('total_hours_attended', sa.Float(), nullable=False, comment='Total hours of attendance'),
    sa.Column('pre_test_score', sa.Float(), nullable=True, comment='Score from pre-assessment/test'),
    sa.Column('post_test_score', sa.Float(), nullable=True, comment='Score from post-assessment/test'),
    sa.Column('assessment_passed', sa.Boolean(), nullable=True, comment='True if assessment criteria met, False otherwise'),
    sa.Column('certificate_status_id', sa.Integer(), nullable=False),
    sa.Column('certificate_issued_date', sa.DateTime(timezone=True), nullable=True, comment='Date when the certificate was issued'),
    sa.Column('certificate_url', sa.String(length=500), nullable=True, comment='URL to the issued certificate file'),
    sa.ForeignKeyConstraint(['certificate_status_id'], ['member_certificate_statuses.id'], ),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['registration_statuses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('member_id', 'event_entity_id', name='_member_event_entity_uc')
    )
    with op.batch_alter_table('member_registrations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_member_registrations_event_entity_id'), ['event_entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_member_registrations_member_id'), ['member_id'], unique=False)

    op.create_table('register_payments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('event_entity_id', sa.Integer(), nullable=False),
    sa.Column('payment_amount', sa.Float(), nullable=False),
    sa.Column('payment_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('payment_status_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.String(length=255), nullable=True, comment='Reference ID from payment gateway'),
    sa.Column('payment_proof_url', sa.String(length=500), nullable=True, comment='URL ของไฟล์หลักฐานการชำระเงิน'),
    sa.Column('approved_by_staff_id', sa.Integer(), nullable=True, comment='Staff ผู้อนุมัติการชำระเงิน'),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True, comment='วันที่อนุมัติการชำระเงิน'),
    sa.ForeignKeyConstraint(['approved_by_staff_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['event_entity_id'], ['event_entities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['payment_status_id'], ['register_payment_statuses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    with op.batch_alter_table('register_payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_register_payments_event_entity_id'), ['event_entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_register_payments_member_id'), ['member_id'], unique=False)

    op.create_table('register_payment_receipts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('register_payment_id', sa.Integer(), nullable=False),
    sa.Column('receipt_number', sa.String(length=100), nullable=False, comment='หมายเลขใบเสร็จรับเงิน'),
    sa.Column('issue_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='วันที่ออกใบเสร็จ'),
    sa.Column('receipt_url', sa.String(length=500), nullable=True, comment='URL ของไฟล์ใบเสร็จรับเงิน'),
    sa.Column('issued_by_staff_id', sa.Integer(), nullable=True, comment='Staff ผู้ออกใบเสร็จ'),
    sa.ForeignKeyConstraint(['issued_by_staff_id'], ['staff_account.id'], ),
    sa.ForeignKeyConstraint(['register_payment_id'], ['register_payments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('receipt_number'),
    sa.UniqueConstraint('register_payment_id')
    )

    with op.batch_alter_table('course_registrations', schema=None) as batch_op:
        batch_op.drop_index('ix_course_registrations_course_id')
        batch_op.drop_index('ix_course_registrations_member_id')

    op.drop_table('course_registrations')

    with op.batch_alter_table('webinar_registrations', schema=None) as batch_op:
        batch_op.drop_index('ix_webinar_registrations_member_id')
        batch_op.drop_index('ix_webinar_registrations_webinar_id')

    op.drop_table('webinar_registrations')

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('course_code', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('degree_en', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('degree_th', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('department_owner', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('created_by', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('certificate_name_th', sa.String(length=255), nullable=True, comment='ชื่อใบรับรองภาษาไทย'))
        batch_op.add_column(sa.Column('certificate_name_en', sa.String(length=255), nullable=True, comment='English certificate name'))
        batch_op.create_unique_constraint(None, ['course_code'])
        batch_op.create_foreign_key(None, 'event_entities', ['id'], ['id'])
        batch_op.drop_column('description_en')
        batch_op.drop_column('created_at')
        batch_op.drop_column('title_en')
        batch_op.drop_column('title_th')
        batch_op.drop_column('description_th')
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.add_column(sa.Column('member_type_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('gender_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('age_range_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('total_continue_education_score', sa.Numeric(precision=10, scale=2), nullable=False, comment='คะแนนการศึกษาต่อเนื่องรวมของสมาชิก'))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=200),
               nullable=True)
        batch_op.create_foreign_key(None, 'member_types', ['member_type_id'], ['id'])
        batch_op.create_foreign_key(None, 'age_ranges', ['age_range_id'], ['id'])
        batch_op.create_foreign_key(None, 'genders', ['gender_id'], ['id'])
        batch_op.drop_column('gender')
        batch_op.drop_column('member_type')
        batch_op.drop_column('age_range')

    with op.batch_alter_table('webinars', schema=None) as batch_op:
        batch_op.add_column(sa.Column('certificate_name_th', sa.String(length=255), nullable=True, comment='ชื่อใบรับรองภาษาไทย'))
        batch_op.add_column(sa.Column('certificate_name_en', sa.String(length=255), nullable=True, comment='English certificate name'))
        batch_op.create_foreign_key(None, 'event_entities', ['id'], ['id'])
        batch_op.drop_column('description_en')
        batch_op.drop_column('time_th')
        batch_op.drop_column('created_at')
        batch_op.drop_column('title_en')
        batch_op.drop_column('speaker_en')
        batch_op.drop_column('title_th')
        batch_op.drop_column('date_th')
        batch_op.drop_column('description_th')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('speaker_th')
        batch_op.drop_column('time_en')
        batch_op.drop_column('date_en')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('webinars', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_en', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('time_en', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('speaker_th', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description_th', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('date_th', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('title_th', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('speaker_en', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('title_en', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('time_th', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('certificate_name_en')
        batch_op.drop_column('certificate_name_th')

    with op.batch_alter_table('members', schema=None) as batch_op:
        batch_op.add_column(sa.Column('age_range', postgresql.ENUM('under_18', 'age_18_24', 'age_25_34', 'age_35_44', 'age_45_54', 'age_55_64', 'age_65_plus', name='age_range_enum'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('member_type', postgresql.ENUM('mahidol_student', 'grad_student', 'staff', 'personal', 'other', name='member_type_enum'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('gender', postgresql.ENUM('male', 'female', 'non_binary', 'prefer_not_to_say', name='gender_enum'), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=200),
               nullable=False)
        batch_op.drop_column('total_continue_education_score')
        batch_op.drop_column('age_range_id')
        batch_op.drop_column('gender_id')
        batch_op.drop_column('member_type_id')

    with op.batch_alter_table('courses', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description_th', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('title_th', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('title_en', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description_en', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('certificate_name_en')
        batch_op.drop_column('certificate_name_th')
        batch_op.drop_column('created_by')
        batch_op.drop_column('department_owner')
        batch_op.drop_column('degree_th')
        batch_op.drop_column('degree_en')
        batch_op.drop_column('course_code')


    op.create_table('webinar_registrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('member_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('webinar_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('registration_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('registered', 'completed', 'cancelled', 'pending', name='registration_status_enum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], name='webinar_registrations_member_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['webinar_id'], ['webinars.id'], name='webinar_registrations_webinar_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='webinar_registrations_pkey'),
    sa.UniqueConstraint('member_id', 'webinar_id', name='_member_webinar_uc')
    )
    with op.batch_alter_table('webinar_registrations', schema=None) as batch_op:
        batch_op.create_index('ix_webinar_registrations_webinar_id', ['webinar_id'], unique=False)
        batch_op.create_index('ix_webinar_registrations_member_id', ['member_id'], unique=False)


    op.create_table('course_registrations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('member_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('registration_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('registered', 'completed', 'cancelled', 'pending', name='registration_status_enum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='course_registrations_course_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], name='course_registrations_member_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='course_registrations_pkey'),
    sa.UniqueConstraint('member_id', 'course_id', name='_member_course_uc')
    )
    with op.batch_alter_table('course_registrations', schema=None) as batch_op:
        batch_op.create_index('ix_course_registrations_member_id', ['member_id'], unique=False)
        batch_op.create_index('ix_course_registrations_course_id', ['course_id'], unique=False)


    op.drop_table('register_payment_receipts')
    with op.batch_alter_table('register_payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_register_payments_member_id'))
        batch_op.drop_index(batch_op.f('ix_register_payments_event_entity_id'))

    op.drop_table('register_payments')
    with op.batch_alter_table('member_registrations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_member_registrations_member_id'))
        batch_op.drop_index(batch_op.f('ix_member_registrations_event_entity_id'))

    op.drop_table('member_registrations')
    op.drop_table('event_speakers')
    op.drop_table('event_registration_reviewers')
    op.drop_table('event_registration_fees')
    op.drop_table('event_receipt_issuers')
    op.drop_table('event_payment_approvers')
    op.drop_table('event_materials')
    op.drop_table('event_editors')
    op.drop_table('event_certificate_managers')
    op.drop_table('event_agendas')
    op.drop_table('event_entities')
    op.drop_table('registration_statuses')
    op.drop_table('register_payment_statuses')
    op.drop_table('member_types')
    op.drop_table('member_certificate_statuses')
    op.drop_table('genders')
    op.drop_table('entity_categories')
    op.drop_table('certificate_types')
    op.drop_table('age_ranges')
    # ### end Alembic commands ###
